//Question
	pk ne pas tout gérer du coté server?
	pas besoin de pigpong ni tcp pour quiter la partie si on ne resoi pas sont paquet on ne l'affiche pas

//TODO TCP IN GAME
       LANCEMENT DE LA PARTIE
       QUITER LA PARTIE
//TODO TCP
       CONNECTION
       JOINDRE UNE PARTIE
       

Note:	"(C)" is used when a message has been send by the client.
	"(S)" is used when a message has been send by the server.

DATA SECTION

      Before describing each data section, we must define some key
      words.
     
        +----------+--------------+------------------------------------+
        |   type   | size (Bytes) |             description            |
        +----------+--------------+------------------------------------+
        | integer  |       4      |      integer coded on 4 Bytes      |
        |          |              |  (-2 147 483 648 to 2 147 483 647) |
        +----------+--------------+------------------------------------+
        | Uinteger |       4      |      integer coded on 4 Bytes      |
        |          |              |         (0 to 4 294 967 295)       |
        +----------+--------------+------------------------------------+
        |  short   |       2      |      integer coded on 2 Bytes      |
        |          |              |         (-32 768 to 32 767)        |
        +----------+--------------+------------------------------------+
        |  Ushort  |       2      |      integer coded on 2 Bytes      |
        |          |              |             (0 to 65 535)          |
        +----------+--------------+------------------------------------+
        |  char    |       1      |      integer coded on 1 Byte       |
        |          |              |             (-128 to 127)          |
        +----------+--------------+------------------------------------+
        |  Uchar   |       1      |      integer coded on 1 Byte       |
        |          |              |              (0 to 255)            |
        +----------+--------------+------------------------------------+
        |  float   |       4      |    float integer coded on 4 Byte   |
        |          |              |       (3.4*10^-38 à 3.4*10^38)     |
        +----------+--------------+------------------------------------+
        |          |              | String is composed by a short that |
        |  string  |     2 + N    | represents the length of the string|
        |          |              |    followed by an array of char    |
        +----------+--------------+------------------------------------+


UDP PACKET STRUCTURE

    //TODO UDP Description (shown in figure 1)
    	   is used to send information to 
        0         1            5		    512
        +---------+------------+---------------------+
        |  type   | num_packet |         data        |
        +---------+------------+---------------------+
        <<------ header ----->> <<-----  data  ----->>

                    Figure 1 - UDP PACKET STRUCTURE

UDP HEADER SECTION
    +---------------+-------+----------------------------------------+
    |     TYPE      | VALUE |               DESCRIPTION              |
    +---------------+-------+----------------------------------------+
    |PLAYER_INFO(C) |   0   |the player send is information          |
    +---------------+-------+----------------------------------------+
    |SHOOT(C)       |   1   |the player loads his weapon or shoot    |
    +---------------+-------+----------------------------------------+
    |ENTITY_INFO(S) |   2   |entity information send to all users    |
    +---------------+-------+----------------------------------------+

MOVE TYPE
	  
        This packet is sent by client when the player moves.

        0      1            5       6   10  14   
        +------+------------+-----------+---+
        | MOVE | num_packet | NUM_P | x | y |
        +-------------------+-------+---+---+

        DIRECTION is an Uchar. It represents the directional of the player.


SHOOT TYPE
  
        This packet is sent by the client when the player shoots.

        0       1            2       4         5
        +-------+------------+-------+---------+
        | SHOOT | num_packet | NUM_P | PRESSED |
        +-------+------------+-------+---------+

        PRESSED is an Uchar. It means if the shot key is pressed or released.

ENTITY TYPE

        0       1           5            9       10           14    ...
        +-------+-----------+------------+-------+------------+------+
        | TYPE  | ID Entity | NUM PAQUET | FORCE |  COMPONENT | ...  |
        +-------+-----------+------------+-------+------------+------+

DEAD TYPE

        0       1           5
        +-------+-----------+
        | TYPE  | ID Entity |
        +-------+-----------+

QUIT TYPE

        0       1           5
        +-------+-----------+
        | TYPE  | ID Entity |
        +-------+-----------+

CLIENT EVENT


        0       1           5              9
        +-------+-----------+--------------+
        | TYPE  | NUM PAQUET|  TYPE EVENT  |
        +-------+-----------+--------------+

